<script nonce="${scriptNonce}">
    function initPublishing() {
    }

    var numberOfPublishedImages = 0;

    function publishAllViews() {
        numberOfPublishedImages = 0;
        publishImages(structurizr.workspace.getViews());
    }

    function publishViewsFinished() {
        return numberOfPublishedImages === structurizr.workspace.getViews().length;
    }

    function publishImages(viewsToExport) {
        if (viewsToExport && viewsToExport.length > 0) {
            const view = viewsToExport[0];

            changeView(view, function () {
                structurizr.diagram.exportCurrentDiagramToPNG(true, false, function(diagramAsPNG) {
                    const colorScheme = structurizr.ui.isDarkMode() ? '-dark' : '';
                    publishImage(view.key, view.key + colorScheme + '.png', diagramAsPNG, function() {
                        numberOfPublishedImages++;

                        if (view.type !== structurizr.constants.IMAGE_VIEW_TYPE) {
                            structurizr.diagram.exportCurrentDiagramKeyToPNG(function (diagramKeyAsPNG) {
                                publishImage(view.key, view.key + colorScheme + '-key.png', diagramKeyAsPNG, function () {
                                    viewsToExport.splice(0, 1);
                                    publishImages(viewsToExport);
                                })

                            });
                        } else {
                            viewsToExport.splice(0, 1);
                            publishImages(viewsToExport);
                        }
                    });
                });
            });
        }
    }

    function publishImage(viewKey, filename, imageAsBase64EncodedDataUri, callback) {
        var contentType = 'text/plain';

        $.ajax({
            url: '/workspace/${workspace.id}/images/' + encodeURIComponent(filename),
            type: "PUT",
            contentType: contentType,
            cache: false,
            headers: {
                'Content-Type': contentType
            },
            dataType: 'json',
            data: imageAsBase64EncodedDataUri
        })
            .done(function(data, textStatus, jqXHR) {
                callback();
            })
            .fail(function (jqXHR, textStatus, errorThrown) {
                callback();
                logError(jqXHR, textStatus, errorThrown);
            });
    }
</script>